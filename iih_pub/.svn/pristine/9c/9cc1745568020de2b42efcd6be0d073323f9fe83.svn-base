package iih.ci.rcm.reportcardmissqry.i;

import iih.bd.srv.reportcardtpl.d.ReportCardTplDo;
import iih.ci.rcm.contagion.dto.d.EntDto;
import xap.mw.core.data.BizException;
import xap.mw.core.data.FArrayList2;
import xap.sys.appfw.orm.handle.dataobject.paging.PaginationInfo;
import xap.sys.appfw.orm.handle.dataobject.paging.PagingRtnData;
import xap.sys.appfw.tmpl.qryscheme.qrydto.QryRootNodeDTO;

/**
* 报卡漏报查询节点服务
*/
public interface IReportCardMissQryService {

	/**
	 * 就诊列表查询
	 * @param qryRootNodeDTO
	 * @param paginationInfo
	 * @return
	 * @throws BizException
	 */
	public abstract PagingRtnData<EntDto> getEntDTOList(QryRootNodeDTO qryRootNodeDTO, PaginationInfo paginationInfo)throws BizException;
	
	/**
	 * 报卡信息（文书，模板，流）
	 * @param enDto
	 * @return
	 * @throws BizException
	 */
	public abstract FArrayList2 GetData(EntDto enDto)throws BizException;
	
	/**
	 * 无报卡但是既往已报时查询既往已报文书ID
	 * @param enDto
	 * @return
	 * @throws BizException
	 */
	public abstract String findReportedHistory(EntDto enDto)throws BizException;
	
	/**
	 * 判断当前诊断是否关联报卡类型，如果关联则返回报卡类型主键
	 * @param id_di
	 * @return
	 * @throws BizException
	 */
	public abstract String hasDiagPass(String id_di) throws BizException;
	
	/**
	 * 判断当次就诊当前诊断是否弹报卡弹框提示,如果需要true，不需要false
	 * @param id_ent
	 * @param id_di
	 * @return
	 * @throws BizException
	 */
	public abstract Boolean hasCiRcmPass(String id_ent,String id_bd_rcm_tp) throws BizException;
	
	/**
	 * 创建既往已报数据
	 * @param id_ent
	 * @param id_bd_rcm_tp
	 * @return true 成功  false 失败
	 * @throws BizException
	 */
	public abstract Boolean newCiRcmPass(String id_ent,String id_bd_rcm_tp)  throws BizException;
	
	/**
	 * 根据报卡类型主键查找默认模板，如果没有返回
	 * @param id_bd_rcm_tp
	 * @return 
	 * @throws BizException
	 */
	public abstract ReportCardTplDo findDefQry(String id_bd_rcm_tp) throws BizException;
	
	
}
