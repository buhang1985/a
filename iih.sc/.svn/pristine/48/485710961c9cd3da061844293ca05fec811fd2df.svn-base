package iih.sc.apt.aptip.s;
import iih.sc.apt.aptip.d.AptIpDO;
import iih.sc.apt.aptip.d.AptipAggDO;
import iih.sc.apt.aptip.d.desc.AptIpDODesc;
import iih.sc.apt.aptip.i.IAptipCudService;
import iih.sc.apt.aptip.i.IAptipRService;
import iih.sc.scbd.log.d.EuOperTp;
import iih.sc.scbd.log.rule.ScAggLogRule;
import xap.mw.core.annotation.Service;
import xap.mw.core.service.constant.Binding;
import xap.sys.appfw.bizrule.handler.AroundProcesser;
import xap.sys.appfw.bizrule.handler.CompareAroundProcesser;
import xap.sys.appfw.orm.desc.DescManager;
import xap.sys.appfw.orm.handle.agg.BaseAggService;
import xap.sys.appfw.orm.utils.IAppFwTempTbl;


/**
 * 住院预约AggDO数据CRUD服务实现
 */
@Service(serviceInterfaces={IAptipCudService.class,IAptipRService.class}, binding=Binding.JSONRPC)
public class AptipCrudServiceImpl extends BaseAggService<AptipAggDO,AptIpDO> implements IAptipCudService,IAptipRService {

    public AptipCrudServiceImpl() {
        super(DescManager.getInstance().getDODesc(AptIpDODesc.class),IAppFwTempTbl.tmp_iaw_02.name()); 
    }
    
    @Override
    protected void addInsertAfterRule(AroundProcesser<AptipAggDO> processor) {
    	super.addInsertAfterRule(processor);
    	processor.addAfterRule(new ScAggLogRule<AptipAggDO>(EuOperTp.INSERT));
    }
    
    @Override
    protected void addUpdateAfterRule(CompareAroundProcesser<AptipAggDO> processor, AptipAggDO[] originvos) {
    	super.addUpdateAfterRule(processor, originvos);
    	processor.addAfterRule(new ScAggLogRule<AptipAggDO>(EuOperTp.UPDATE, originvos));
    }
    
    @Override
    protected void addRealDeleteAfterRule(AroundProcesser<AptipAggDO> processor) {
    	super.addRealDeleteAfterRule(processor);
    	processor.addAfterRule(new ScAggLogRule<AptipAggDO>(EuOperTp.DELETE));
    }
}

