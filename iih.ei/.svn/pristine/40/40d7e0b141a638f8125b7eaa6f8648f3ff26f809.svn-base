package iih.ei.bl.ecinc.bosssoft.v2.s.bp;

import com.alibaba.fastjson.JSON;

import iih.ei.bl.ecinc.bosssoft.constant.IEcIncBossSoftConst;
import iih.ei.bl.ecinc.bosssoft.v2.s.data.ReturnParam;
import iih.ei.bl.ecinc.bosssoft.v2.s.data.invoice.EcInvoiceRedOutParam;
import iih.ei.bl.ecinc.bosssoft.v2.s.data.invoice.EcInvoiceRedParam;
import iih.ei.bl.ecinc.bosssoft.v2.s.http.BossSoftHttpClient;
import iih.ei.bl.ecinc.d.EcIncBlFlowRedInvoiceInDTO;
import iih.ei.bl.ecinc.d.EcIncBlFlowRedInvoiceOutDTO;
import iih.ei.bl.ecinc.d.EcIncResultDTO;
import iih.ei.bl.ecinc.util.EcIncDataUtil;
import iih.ei.bl.util.EIThirdLogger;
import xap.mw.core.data.BizException;
import xap.mw.core.data.Context;
import xap.mw.core.utils.StringUtil;
import xap.mw.coreitf.d.FBoolean;
import xap.mw.coreitf.d.FDateTime;
import xap.sys.bdfw.bbd.d.PsnDocDO;

/**
 * 博思电子发票红冲
 * @author ly 2019/12/04
 * 
 */
public class BossSoftEcIncBlFlowRedInvoiceBP {
	
	/**
	 * 电子发票红冲
	 * @param dto
	 * @return
	 * @throws BizException
	 */
	public EcIncResultDTO<EcIncBlFlowRedInvoiceOutDTO> exec(EcIncBlFlowRedInvoiceInDTO dto) throws BizException {
		
		EcInvoiceRedParam param = new EcInvoiceRedParam();
		
		param.setBillBatchCode(dto.getEcinc_code());
		param.setBillNo(dto.getEcincno());
		param.setReason(dto.getReason());
		PsnDocDO psnDO = EcIncDataUtil.getPsnData(Context.get().getStuffId());
		param.setOperator(psnDO.getName());
		param.setBusDateTime(EcIncDataUtil.convertDateTime(new FDateTime()) + "000");
		param.setPlaceCode(psnDO.getCode());
		
		ReturnParam rtnParam = null;
		try {
			BossSoftHttpClient httpClient = new BossSoftHttpClient(IEcIncBossSoftConst.METHOD_WRITEOFFEBILL,
					IEcIncBossSoftConst.METHOD_WRITEOFFEBILL_NAME);
			String data = JSON.toJSONString(param);
			rtnParam = httpClient.invoke(data);
		} catch (Exception e) {
			e.printStackTrace();
			EIThirdLogger.error(String.format("%s失败", IEcIncBossSoftConst.METHOD_WRITEOFFEBILL_NAME) + e.getMessage(), e);
			EcIncResultDTO<EcIncBlFlowRedInvoiceOutDTO> rlt = new EcIncResultDTO<EcIncBlFlowRedInvoiceOutDTO>();
			rlt.setFg_success(FBoolean.FALSE);
			rlt.setErrormsg(e.getMessage());
			rlt.setOutparam(e.getMessage());
			return rlt;
		}
		
		EcIncResultDTO<EcIncBlFlowRedInvoiceOutDTO> rlt = new EcIncResultDTO<EcIncBlFlowRedInvoiceOutDTO>();
		rlt.setFg_success(new FBoolean(rtnParam.getFgSuccess()));
		
		if(FBoolean.TRUE.equals(rlt.getFg_success())){
			EcInvoiceRedOutParam outData =  JSON.parseObject(rtnParam.getData(), EcInvoiceRedOutParam.class);;
			
			EcIncBlFlowRedInvoiceOutDTO outDto = new EcIncBlFlowRedInvoiceOutDTO();
			outDto.setEcinc_code(outData.geteScarletBillBatchCode());
			outDto.setEcincno(outData.geteScarletBillNo());
			outDto.setEcinc_checkno(outData.geteScarletRandom());
			outDto.setEcinc_url(outData.getPictureUrl());
			outDto.setEcinc_neturl(outData.getPictureNetUrl());
			try {
				outDto.setDt_inc(new FDateTime(outData.getCreateTime()));
			} catch (Exception e) {
			}
			try {
				if(!StringUtil.isEmpty(outData.getBillQRCode())){
					//outDto.setEc_qrcode_pic(Base64.decode(outData.getBillQRCode().getBytes("UTF-8")));
				}
			} catch (Exception e) {
			}
			rlt.setData(outDto);
		}else{
			rlt.setErrormsg(rtnParam.getErrorMsg());
		}
			
		rlt.setInparam(rtnParam.getInputStr());
		rlt.setOutparam(rtnParam.getOutputStr());
		return rlt;
	}
}
