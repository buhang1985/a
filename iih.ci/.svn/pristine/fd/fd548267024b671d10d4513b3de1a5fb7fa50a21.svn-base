package iih.ci.mi.ord.bp;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.apache.commons.lang3.StringUtils;

import iih.ci.mi.external.obtain.mi.ICiMiMcRService;
import iih.ci.mi.ord.i.meta.OrdIndicParamDTO;
import iih.ci.mi.ord.i.meta.OrdIndicRstDTO;
import iih.ci.mi.ord.i.meta.OrdSrvIndicParamDTO;
import iih.ci.mi.ord.i.meta.OrdSrvIndicRstDTO;
import iih.ci.ord.ems.d.CiEnContextDTO;
import iih.ci.ord.ordext.d.HpJudgeEnum;
import iih.ci.ord.ordext.d.HpJudgeRstEnum;
import xap.mw.core.data.BizException;
import xap.mw.sf.core.util.ServiceFinder;
import xap.sys.xbd.paramset.i.ParamsetQryUtil;

/**
 * 适应症校验
 * @author HUMS
 *
 */
public class GetOrdIndicVerifyBP extends BasicOrdMiVerifyBP	{

	private ICiMiMcRService ciMiMcRService ; 
	public GetOrdIndicVerifyBP(){
		ciMiMcRService = ServiceFinder.find(ICiMiMcRService.class);
	}
	
	public List<OrdIndicRstDTO> exec(CiEnContextDTO ctx, List<OrdIndicParamDTO> ordIndicList) throws BizException{
		
		// 未启用医保适应症校验
		if(!isMiVerifyEnabled(ctx)){
			return getDisabledOrdIndicRst(ctx,ordIndicList);
		}
		
		if(!isHpPat(ctx)){
			return getSelfpayOrdIndicRst(ctx,ordIndicList);
		}
				
		List<OrdIndicRstDTO> ordIndicRstLst =  ciMiMcRService.checkIndicationRule(ctx, ordIndicList);
		
		return ordIndicRstLst;
	}

	@Override
	public boolean isEnabledVerify(CiEnContextDTO ctx) throws BizException {
		
		String indicationVerifyEnType = ParamsetQryUtil.getParaString(ctx.getId_org(),"CIOR0529");
		if(StringUtils.isEmpty(indicationVerifyEnType)){
			return false;
		}
		
		return Arrays.asList(indicationVerifyEnType.split(",")).contains(ctx.getCode_entp());
	}
	
	
	/**
	 * 获取非医保就诊的医保信息
	 * @param ctx
	 * @param orderList
	 * @return
	 */
	public List<OrdIndicRstDTO> getSelfpayOrdIndicRst(CiEnContextDTO ctx, List<OrdIndicParamDTO> orderList){
		
		List<OrdIndicRstDTO> ordIndecRstList = new ArrayList<OrdIndicRstDTO>();
		for(OrdIndicParamDTO order : orderList){
			OrdIndicRstDTO ordIndicRst = this.getDefaultOrdIndicRst(ctx,order);
			for(OrdSrvIndicRstDTO ordSrvRst : ordIndicRst.getOrdSrvIndicRstList()){
				ordSrvRst.setEu_hpjudge(HpJudgeEnum.SYSTEM_JUDGE);
				ordSrvRst.setEu_orsrvhp(HpJudgeRstEnum.SELFPAY);
				ordSrvRst.setDes_limit("非医保就诊！");
			}
			ordIndecRstList.add(ordIndicRst);
		}
		
		return ordIndecRstList;
	}
	
	/**
	 * 获取未启用医保校验返回结果
	 * @param ctx
	 * @param order
	 * @return
	 */
	private List<OrdIndicRstDTO> getDisabledOrdIndicRst(CiEnContextDTO ctx, List<OrdIndicParamDTO> orderList){
		
		List<OrdIndicRstDTO> ordIndecRstList = new ArrayList<OrdIndicRstDTO>();
		for(OrdIndicParamDTO order : orderList){
			OrdIndicRstDTO ordIndicRst = this.getDefaultOrdIndicRst(ctx,order);
			for(OrdSrvIndicRstDTO ordSrvRst : ordIndicRst.getOrdSrvIndicRstList()){
				ordSrvRst.setEu_hpjudge(HpJudgeEnum.SYSTEM_JUDGE);
				ordSrvRst.setEu_orsrvhp(HpJudgeRstEnum.SELFPAY);
				ordSrvRst.setDes_limit("未启用医保校验！");
			}
			ordIndecRstList.add(ordIndicRst);
		}
		
		return ordIndecRstList;
	}

	/**
	 * 获取医保适应症默认返回对象
	 * @param ctx
	 * @param order
	 * @return
	 */
	private OrdIndicRstDTO getDefaultOrdIndicRst(CiEnContextDTO ctx, OrdIndicParamDTO order){
		
		OrdIndicRstDTO ordIndicRst = new OrdIndicRstDTO();
		
		ordIndicRst.setId_en(ctx.getId_en());
		ordIndicRst.setId_hp(ctx.getId_hp());
		ordIndicRst.setCode_entp(ctx.getCode_entp());

		ordIndicRst.setId_or(order.getId_or());
		ordIndicRst.setCode_or(order.getCode_or());
		ordIndicRst.setName_or(order.getName_or());

		for (OrdSrvIndicParamDTO ordSrv : order.getOrdSrvIndicParamList()) {
			
			OrdSrvIndicRstDTO ordSrvRst = new OrdSrvIndicRstDTO();
			
			ordSrvRst.setId_orsrv(ordSrv.getId_orsrv());

			ordSrvRst.setSd_srvtp(ordSrv.getSd_srvtp());

			ordSrvRst.setId_srv(ordSrv.getId_srv());
			ordSrvRst.setCode_srv(ordSrv.getCode_srv());
			ordSrvRst.setName_srv(ordSrv.getName_srv());

			ordSrvRst.setId_mm(ordSrv.getId_mm());
			ordSrvRst.setCode_mm(ordSrv.getCode_mm());
			ordSrvRst.setName_mm(ordSrv.getName_mm());

			ordSrvRst.setId_dsdef(ordSrv.getId_dsdef());
			ordSrvRst.setCode_dsdef(ordSrv.getCode_dsdef());
			ordSrvRst.setName_dsdef(ordSrv.getName_dsdef());

			ordIndicRst.addChild(ordSrvRst);
		}
		
		return ordIndicRst;
	}
}
